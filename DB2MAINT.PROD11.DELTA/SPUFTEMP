//UXD888M JOB ,'CJR A3 12TH FLOOR',CLASS=S,MSGCLASS=X
//JOBLIB  DD  DSN=SSXDP.DB2R.SDSNEXIT,DISP=SHR
//         DD DISP=SHR,DSN=SDB2R.SDSNLOAD
//PH01PS02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
 DSN SYSTEM(DB2R)
 RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP2) +
      LIB('SSXDP.DSNDBRG.DB2R.RUNLIB.LOAD') PARMS('/ALIGN(MID)')
 END
//*
//SYSIN    DD *
--**********************************************************************
--* NAME = DSNTESQ                                                     *
--*                                                                    *
--* DESCRIPTIVE NAME = DB2 CATALOG CONSISTENCY QUERIES                 *
--*                                                                    *
--*    LICENSED MATERIALS - PROPERTY OF IBM                            *
--*    5625-DB2                                                        *
--*    (C) COPYRIGHT 1982, 2003 IBM CORP.  ALL RIGHTS RESERVED.        *
--*                                                                    *
--*    STATUS = VERSION 8                                              *
--*                                                                    *
--* FUNCTION = Provide queries that check the CATALOG consistency.     *
--*            Provide CREATEs and INSERT statements to CREATE and     *
--*            populate a copy of the DB2 CATALOG.                     *
--*            Provide queries that are recommended during migration.  *
--*                                                                    *
--* CHANGE ACTIVITY                                                    *
--* PQ09403 - QUERY63 does not consider different versions of the same *
--*           package. Forward fit with D7344                          *
--* D12709  - Update queries for new function.                         *
--* D12822  - Update queries for new function.                         *
--* PQ27395 - Add premigration query to identify views on              *
--*           SYSIBM.SYSCOLDIST and SYSIBM.SYSCOLDISTSTATS             *
--* PQ29500 - Correct doc references in prologue                       *
--* PQ62414 - Update QUERY14 for new function.                         *
--* D44337  - update query5                                            *
--* D48194  - update query16                                           *
--* D48195  - update query50                                           *
--* D44852  - update migration step 1 query                            *
--* D48823  - update Query 14,16,50,52                                 *
--* DJ181   - Add query 65, update the ENFM queries                    *
--* 56820   - Improve performance of several catalog queries.          *
--* PQ87447 - Update QUERY5 and QUERY18 for performance                *
--**********************************************************************
--*  D S N T E S Q                                                     *
--**********************************************************************
--*  This file contains SQL statements that check the logical          *
--*  correctness of the DB2 catalog and SQL statements that are        *
--*  recommended to be run in migration steps 1, 2, 3, and 4.          *
--*                                                                    *
--*  In this file, textual comments are preceded by the                *
--*  characters "--*", SQL statements that create a copy of the        *
--*  CATALOG are preceded by "-->" and SQL statements recommended in   *
--*  migration steps 1 and 2 are preceded by "--M". SQL statements that*
--*  check the consistency of the CATALOG are not preceded by any      *
--*  comment characters.                                               *
--*                                                                    *
--*  Normally, you should execute DSN1CHKR before executing these      *
--*  queries, to insure that the physical structure of the catalog is  *
--*  correct. You also might want to execute CHECK INDEX before        *
--*  executing the queries.                                            *
--*                                                                    *
--*  For optimal performance, you should consider: (1) Using catalog   *
--*  copies See details below. (2) Tuning these queries.  See Chapter  *
--*  5 of the Administration Guide in tuning queries.                  *
--**********************************************************************
--*  Migration Queries                                                 *
--*                                                                    *
--*  In the Installation guide it is recommended that some queries be  *
--*  run in migration steps 1, 2, 3 and 4 on DB2 prior to migration.   *
--*  These queries are included at the end of this file. The queries   *
--*  are commented out with "--M" at the beginning of each line. For   *
--*  more details on these queries see the Installation Guide,         *
--*  the section "Migrating the DB2 System".                           *
--**********************************************************************
--*  Logical correctness Queries                                       *
--*                                                                    *
--*  The SQL statements can be executed from SPUFI or from a dynamic   *
--*  SQL program like DSNTEP2. The queries can be executed on the      *
--*  actual catalog tables or on copies of the catalog.                *
--*  RUNSTATS should be run on the catalog or the copies to            *
--*  insure the best performance. In some cases the queries will       *
--*  perform better when executed on the copies using the extra        *
--*  indexes as defined for some of the tables.                        *
--*                                                                    *
--*  Using the Copies of the Catalog                                   *
--*                                                                    *
--*  The copies use segmented tablespaces and your default buffer      *
--*  pool.  You might need to modify the CREATE statements below to    *
--*  change the buffer pool for optimal performance. See the           *
--*  "Performance Monitoring and Tuning" section of the Administration *
--*  Guide for details. Executing these queries                        *
--*  on a copy of the catalog reduces contention on the catalog        *
--*  and lets you define extra indexes that can improve the            *
--*  performance the queries.  To use the copy of the catalog tables:  *
--*                                                                    *
--*  (1) Identify the queries that you want to execute.                *
--*  (2) Review the CREATE statements for the necessary tables and     *
--*      consider modifying those statements for performance.  For     *
--*      example, you might want to create an index on a table.        *
--*  (3) Execute the CREATE statements and the insert statements       *
--*      needed to populate the copy tables.                           *
--*  (4) Execute the queries on the copies.                            *
--*                                                                    *
--*  To execute the queries on the copies, you must change the table   *
--*  qualifiers in the queries from "SYSIBM" to the owner of the       *
--*  copies.  For example,  the following ISPF edit commands could be  *
--*  used if the userid "SYSADM" was used to create the copies.        *
--*                                                                    *
--*  F "DROP DATA" 6 14                                                *
--*  C "-->" .ZCSR "   " .ZLAST ALL                                    *
--*  TOP                                                               *
--*  F "QUERY1" 6 11                                                   *
--*  C "FROM SYSIBM." .ZCSR "FROM SYSADM." .ZLAST ALL                  *
--*                                                                    *
--*  These commands find the DROP DATABASE statement and uncomment all *
--*  the SQL statements used to create and populate the copies.        *
--*  Then they find the first SQL query and change the from clause to  *
--*  the new userid. If the new userid is smaller than the old the     *
--*  sequence numbers may need to be realigned.                        *
--*                                                                    *
--*  The following table is a cross reference of the catalog tables,   *
--*  QUERIES, and SQL statements needed to create the copies.          *
--*  For example to test SYSPLANAUTH you would need to run             *
--*  DDL19, DDL22, INS19, INS22 and QUERY37.                           *
--*                                                                    *
--**********************************************************************
--*  TABLE        |      QUERYx              |  DDLx  /  INSx          *
--**********************************************************************
--*SYSTABLESPACE  |  1,  2, 3, 4, 5, 8, 40,  | 1,2,3,14,16,23,28       *
--*               | 47, 58                   |                         *
--****************|**************************|**************************
--*SYSTABLEPART   |  2,  3, 4, 6, 7          | 1,2,8,17                *
--****************|**************************|**************************
--*SYSTABLES      |  5,  8,  9, 10, 11, 12,  | 1,3,4,6,8,11,13,23,24,  *
--*               | 13, 14, 15, 16, 17, 20,  | 25,26,28                *
--*               | 26, 30, 42, 50, 51, 60   |                         *
--****************|**************************|**************************
--*SYSCOLUMNS     |  9, 17, 18, 19, 25, 29,  | 3,4,5,7,8,10,12         *
--*               | 54                       |                         *
--****************|**************************|**************************
--*SYSFIELDS      | 18, 19                   | 4,5                     *
--****************|**************************|**************************
--*SYSRELS        | 10, 11, 12               | 3,6                     *
--****************|**************************|**************************
--*SYSFOREIGNKEYS | 54                       | 4,7                     *
--****************|**************************|**************************
--*SYSINDEXES     |  6, 20, 21, 22, 23, 25,  | 2,3,4,8,9,10,23,28      *
--*               | 39, 57                   |                         *
--****************|**************************|**************************
--*SYSINDEXPART   | 22, 23, 24               | 8,9,17                  *
--****************|**************************|**************************
--*SYSKEYS        | 21, 25                   | 4,8,10                  *
--****************|**************************|**************************
--*SYSTABAUTH     | 26, 27, 28, 55, 56, 64   | 3,11,12,19,27           *
--****************|**************************|**************************
--*SYSCOLAUTH     | 27, 28, 29               | 3,4,11,12               *
--****************|**************************|**************************
--*SYSSYNONYMS    | 30, 41, 59               | 3,13,23,28              *
--****************|**************************|**************************
--*SYSDATABASE    |  1, 43, 44               | 1,14,15                 *
--****************|**************************|**************************
--*SYSDBAUTH      | 43, 44                   | 14,15                   *
--****************|**************************|**************************
--*SYSRESAUTH     | 46, 47                   | 1,16,17                 *
--****************|**************************|**************************
--*SYSSTOGROUP    |  7, 24, 45, 46           | 2,9,16,17,18            *
--****************|**************************|**************************
--*SYSVOLUMES     | 45                       | 17,18                   *
--****************|**************************|**************************
--*SYSPLAN        | 31, 32, 33, 34, 37, 38   | 11,19,20,21,22,23,29,30 *
--*               | 55, 61, 62               |                         *
--****************|**************************|**************************
--*SYSDBRM        | 31, 32, 35, 36           | 19,20,21                *
--****************|**************************|**************************
--*SYSSTMT        | 33, 34, 35, 36           | 19,20,21                *
--****************|**************************|**************************
--*SYSPLANAUTH    | 37                       | 19,22                   *
--****************|**************************|**************************
--*SYSPLANDEP     | 38, 39, 40, 41, 42       | 1,3,8,13,19,23          *
--****************|**************************|**************************
--*SYSVTREE       | 15, 16, 48, 49, 52, 53   | 3,24,25,26              *
--****************|**************************|**************************
--*SYSVIEWS       | 13, 14, 48, 49, 64       | 3,24,25                 *
--****************|**************************|**************************
--*SYSVIEWDEP     | 50, 51, 52, 53           | 3,24,26                 *
--****************|**************************|**************************
--*SYSPACKAGE     | 56,63                    | 11,27,31                *
--****************|**************************|**************************
--*SYSPACKDEP     | 57, 58, 59, 60           | 1,3,8,13,28             *
--****************|**************************|**************************
--*SYSPACKLIST    | 61                       | 19,29                   *
--****************|**************************|**************************
--*SYSPLSYSTEM    | 62                       | 19,30                   *
--****************|**************************|**************************
--*SYSPKSYSTEM    | 63                       | 27,31                   *
--**********************************************************************
--*  The following statements should be executed to set up a database  *
--*  and tablespaces as copies of the catalog.                         *
--**********************************************************************
-->  DROP DATABASE DSNTESQ;
-->  COMMIT;
-->  CREATE DATABASE DSNTESQ;
-->  CREATE TABLESPACE DSNQDBS IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQDBA IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQGRP IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQGPA IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQPKG IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQPLN IN DSNTESQ SEGSIZE 32;
-->  CREATE TABLESPACE DSNQVWS IN DSNTESQ SEGSIZE 32;
--**********************************************************************
--* DDL1                                                               *
--*  The following DDL should be used for query numbers:               *
--*     1, 2, 3, 4, 5, 8, 40, 47, 58                                   *
--**********************************************************************
-->  CREATE TABLE SYSTABLESPACE
-->    LIKE SYSIBM.SYSTABLESPACE
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQ3X01
-->    ON SYSTABLESPACE(DBNAME,NAME);
--**********************************************************************
--* DDL2                                                               *
--*  The following DDL should be used for query numbers:               *
--*     2, 3, 4, 6, 7                                                  *
--**********************************************************************
-->  CREATE TABLE SYSTABLEPART
-->    LIKE SYSIBM.SYSTABLEPART
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQPX01
-->    ON SYSTABLEPART(DBNAME,TSNAME);
-->  CREATE INDEX DSNQPX02
-->    ON SYSTABLEPART(IXCREATOR,IXNAME,PARTITION);
--**********************************************************************
--* DDL3                                                               *
--*  The following DDL should be used for query numbers:               *
--*     5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 26, 30, 42, 50,   *
--*     51, 60                                                         *
--**********************************************************************
-->  CREATE TABLE SYSTABLES
-->    LIKE SYSIBM.SYSTABLES
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQTX01
-->    ON SYSTABLES(CREATOR,NAME,TYPE);
-->  CREATE INDEX DSNQTX02
-->    ON SYSTABLES(DBNAME,TSNAME,TYPE);
--**********************************************************************
--* DDL4                                                               *
--*  The following DDL should be used for query numbers:               *
--*     9, 17, 18, 19, 25, 29, 54                                      *
--**********************************************************************
-->  CREATE TABLE SYSCOLUMNS
-->    LIKE SYSIBM.SYSCOLUMNS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQCX01
-->    ON SYSCOLUMNS(TBCREATOR,TBNAME,NAME);
-->  CREATE UNIQUE INDEX DSNQCX02
-->    ON SYSCOLUMNS(TBCREATOR,TBNAME,COLNO,FLDPROC);
--**********************************************************************
--* DDL5                                                               *
--*  The following DDL should be used for query numbers:               *
--*     18, 19                                                         *
--**********************************************************************
-->  CREATE TABLE SYSFIELDS
-->    LIKE SYSIBM.SYSFIELDS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQFX01
-->    ON SYSFIELDS(TBCREATOR,TBNAME,COLNO,FLDPROC);
--**********************************************************************
--* DDL6                                                               *
--*  The following DDL should be used for query numbers:               *
--*     10, 11, 12                                                     *
--**********************************************************************
-->  CREATE TABLE SYSRELS
-->    LIKE SYSIBM.SYSRELS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQRX01
-->    ON SYSRELS(REFTBCREATOR,REFTBNAME);
-->  CREATE INDEX DSNQRX02
-->    ON SYSRELS(CREATOR,TBNAME);
--**********************************************************************
--* DDL7                                                               *
--*  The following DDL should be used for query numbers:               *
--*     54                                                             *
--**********************************************************************
-->  CREATE TABLE SYSFOREIGNKEYS
-->    LIKE SYSIBM.SYSFOREIGNKEYS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQKX01
-->    ON SYSFOREIGNKEYS(CREATOR,TBNAME,COLNAME,COLNO,RELNAME);
--**********************************************************************
--* DDL8                                                               *
--*  The following DDL should be used for query numbers:               *
--*     6, 20, 21, 22, 23, 25, 39, 57                                  *
--**********************************************************************
-->  CREATE TABLE SYSINDEXES
-->    LIKE SYSIBM.SYSINDEXES
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQIX01
-->    ON SYSINDEXES(CREATOR,NAME);
-->  CREATE INDEX DSNQIX02
-->    ON SYSINDEXES(TBCREATOR,TBNAME);
--**********************************************************************
--* DDL9                                                               *
--*  The following DDL should be used for query numbers:               *
--*     22, 23, 24                                                     *
--**********************************************************************
-->  CREATE TABLE SYSINDEXPART
-->    LIKE SYSIBM.SYSINDEXPART
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQXX01
-->    ON SYSINDEXPART(IXCREATOR,IXNAME);
--**********************************************************************
--* DDL10                                                              *
--*  The following DDL should be used for query numbers:               *
--*     21, 25                                                         *
--**********************************************************************
-->  CREATE TABLE SYSKEYS
-->    LIKE SYSIBM.SYSKEYS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQYX01
-->    ON SYSKEYS(IXCREATOR,IXNAME);
-->  CREATE INDEX DSNQYX02
-->    ON SYSKEYS(COLNAME,COLNO);
--**********************************************************************
--* DDL11                                                              *
--*  The following DDL should be used for query numbers:               *
--*     26, 27, 28, 55, 56, 64                                         *
--**********************************************************************
-->  CREATE TABLE SYSTABAUTH
-->    LIKE SYSIBM.SYSTABAUTH
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQBX01
-->    ON SYSTABAUTH(TCREATOR,TTNAME,TIMESTAMP);
-->  CREATE INDEX DSNQBX02
-->    ON SYSTABAUTH(COLLID,GRANTEE,GRANTEETYPE);
--**********************************************************************
--* DDL12                                                              *
--*  The following DDL should be used for query numbers:               *
--*     27, 28, 29                                                     *
--**********************************************************************
-->  CREATE TABLE SYSCOLAUTH
-->    LIKE SYSIBM.SYSCOLAUTH
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE INDEX DSNQLX01
-->    ON SYSCOLAUTH(CREATOR,TNAME,COLNAME,TIMESTAMP);
--**********************************************************************
--* DDL13                                                              *
--*  The following DDL should be used for query numbers:               *
--*     30, 41, 59                                                     *
--**********************************************************************
-->  CREATE TABLE SYSSYNONYMS
-->    LIKE SYSIBM.SYSSYNONYMS
-->    IN DSNTESQ.DSNQDBS;
-->  CREATE UNIQUE INDEX DSNQSX01
-->    ON SYSSYNONYMS(CREATOR,NAME);
-->  CREATE INDEX DSNQSX02
-->    ON SYSSYNONYMS(TBCREATOR,TBNAME);
--**********************************************************************
--* DDL14                                                              *
--*  The following DDL should be used for query numbers:               *
--*     1, 43, 44                                                      *
--**********************************************************************
-->  CREATE TABLE SYSDATABASE
-->    LIKE SYSIBM.SYSDATABASE
-->    IN DSNTESQ.DSNQDBA;
-->  CREATE UNIQUE INDEX DSNQDX01
-->    ON SYSDATABASE(NAME);
--**********************************************************************
--* DDL15                                                              *
--*  The following DDL should be used for query numbers:               *
--*     43, 44                                                         *
--**********************************************************************
-->  CREATE TABLE SYSDBAUTH
-->    LIKE SYSIBM.SYSDBAUTH
-->    IN DSNTESQ.DSNQDBA;
-->  CREATE INDEX DSNQUX01
-->    ON SYSDBAUTH(NAME);
--**********************************************************************
--* DDL16                                                              *
--*  The following DDL should be used for query numbers:               *
--*     46, 47                                                         *
--**********************************************************************
-->  CREATE TABLE SYSRESAUTH
-->    LIKE SYSIBM.SYSRESAUTH
-->    IN DSNTESQ.DSNQGPA;
-->  CREATE INDEX DSNQEX01
-->    ON SYSRESAUTH(QUALIFIER,NAME,OBTYPE);
--**********************************************************************
--* DDL17                                                              *
--*  The following DDL should be used for query numbers:               *
--*     7, 24, 45, 46                                                  *
--**********************************************************************
-->  CREATE TABLE SYSSTOGROUP
-->    LIKE SYSIBM.SYSSTOGROUP
-->    IN DSNTESQ.DSNQGRP;
-->  CREATE UNIQUE INDEX DSNQGX01
-->    ON SYSSTOGROUP(NAME);
--**********************************************************************
--* DDL18                                                              *
--*  The following DDL should be used for query numbers:               *
--*     45                                                             *
--**********************************************************************
-->  CREATE TABLE SYSVOLUMES
-->    LIKE SYSIBM.SYSVOLUMES
-->    IN DSNTESQ.DSNQGRP;
-->  CREATE INDEX DSNQMX01
-->    ON SYSVOLUMES(SGNAME);
--**********************************************************************
--* DDL19                                                              *
--*  The following DDL should be used for query numbers:               *
--*     31, 32, 33, 34, 37, 38, 55                                     *
--**********************************************************************
-->  CREATE TABLE SYSPLAN
-->    LIKE SYSIBM.SYSPLAN
-->    IN DSNTESQ.DSNQPLN;
-->  CREATE UNIQUE INDEX DSNQNX01
-->    ON SYSPLAN(NAME);
--**********************************************************************
--* DDL20                                                              *
--*  The following DDL should be used for query numbers:               *
--*     31, 32, 35, 36                                                 *
--**********************************************************************
-->  CREATE TABLE SYSDBRM
-->    LIKE SYSIBM.SYSDBRM
-->    IN DSNTESQ.DSNQPLN;
-->  CREATE UNIQUE INDEX DSNQHX01
-->    ON SYSDBRM(PLNAME,NAME);
--**********************************************************************
--* DDL21                                                              *
--*  The following DDL should be used for query numbers:               *
--*     33, 34, 35, 36                                                 *
--**********************************************************************
-->  CREATE TABLE SYSSTMT
-->    LIKE SYSIBM.SYSSTMT
-->    IN DSNTESQ.DSNQPLN;
-->  CREATE INDEX DSNQJX01
-->    ON SYSSTMT(PLNAME,NAME);
--**********************************************************************
--* DDL22                                                              *
--*  The following DDL should be used for query numbers:               *
--*     37                                                             *
--**********************************************************************
-->  CREATE TABLE SYSPLANAUTH
-->    LIKE SYSIBM.SYSPLANAUTH
-->    IN DSNTESQ.DSNQPLN;
-->  CREATE INDEX DSNQAX01
-->    ON SYSPLANAUTH(NAME,GRANTEE,GRANTOR);
--**********************************************************************
--* DDL23                                                              *
--*  The following DDL should be used for query numbers:               *
--*     38, 39, 40, 41, 42                                             *
--**********************************************************************
-->  CREATE TABLE SYSPLANDEP
-->    LIKE SYSIBM.SYSPLANDEP
-->    IN DSNTESQ.DSNQPLN;
-->  CREATE INDEX DSNQOX01
-->    ON SYSPLANDEP(DNAME);
-->  CREATE INDEX DSNQOX02
-->    ON SYSPLANDEP(BCREATOR,BNAME,BTYPE);
--**********************************************************************
--* DDL24                                                              *
--*  The following DDL should be used for query numbers:               *
--*     15, 16, 48, 49, 52, 53                                         *
--**********************************************************************
-->  CREATE TABLE SYSVTREE
-->    LIKE SYSIBM.SYSVTREE
-->    IN DSNTESQ.DSNQVWS;
-->  CREATE UNIQUE INDEX DSNQWX01
-->    ON SYSVTREE(CREATOR,NAME);
--**********************************************************************
--* DDL25                                                              *
--*  The following DDL should be used for query numbers:               *
--*     13, 14, 48, 49, 64                                             *
--**********************************************************************
-->  CREATE TABLE SYSVIEWS
-->    LIKE SYSIBM.SYSVIEWS
-->    IN DSNTESQ.DSNQVWS;
-->  CREATE UNIQUE INDEX DSNQVX01
-->    ON SYSVIEWS(CREATOR,NAME,SEQNO);
--**********************************************************************
--* DDL26                                                              *
--*  The following DDL should be used for query numbers:               *
--*     50, 51, 52, 53                                                 *
--**********************************************************************
-->  CREATE TABLE SYSVIEWDEP
-->    LIKE SYSIBM.SYSVIEWDEP
-->    IN DSNTESQ.DSNQVWS;
-->  CREATE INDEX DSNQQX01
-->    ON SYSVIEWDEP(DCREATOR,DNAME);
-->  CREATE INDEX DSNQQX02
-->    ON SYSVIEWDEP(BCREATOR,BNAME,BTYPE);
--**********************************************************************
--* DDL27                                                              *
--*  The following DDL should be used for query numbers:               *
--*     56, 63                                                         *
--**********************************************************************
-->  CREATE TABLE SYSPACKAGE
-->    LIKE SYSIBM.SYSPACKAGE
-->    IN DSNTESQ.DSNQPKG;
-->  CREATE UNIQUE INDEX DSNQ1X01
-->    ON SYSPACKAGE(LOCATION,COLLID,NAME,CONTOKEN);
--**********************************************************************
--* DDL28                                                              *
--*  The following DDL should be used for query numbers:               *
--*     57, 58, 59, 60                                                 *
--**********************************************************************
-->  CREATE TABLE SYSPACKDEP
-->    LIKE SYSIBM.SYSPACKDEP
-->    IN DSNTESQ.DSNQPKG;
-->  CREATE INDEX DSNQ2X01
-->    ON SYSPACKDEP(BQUALIFIER,BNAME,BTYPE);
--**********************************************************************
--* DDL29                                                              *
--*  The following DDL should be used for query numbers:               *
--*   61                                                               *
--**********************************************************************
-->  CREATE TABLE SYSPACKLIST
-->    LIKE SYSIBM.SYSPACKLIST
-->    IN DSNTESQ.DSNQPKG;
-->  CREATE INDEX DSNQ4X01
-->    ON SYSPACKLIST(PLANNAME,SEQNO,LOCATION,COLLID,NAME);
--**********************************************************************
--* DDL30                                                              *
--*  The following DDL should be used for query numbers:               *
--*   62                                                               *
--**********************************************************************
-->  CREATE TABLE SYSPLSYSTEM
-->    LIKE SYSIBM.SYSPLSYSTEM
-->    IN DSNTESQ.DSNQPKG;
-->  CREATE INDEX DSNQ5X01
-->    ON SYSPLSYSTEM(NAME,SYSTEM,ENABLE);
--**********************************************************************
--* DDL31                                                              *
--*  The following DDL should be used for query numbers:               *
--*   63                                                               *
--**********************************************************************
-->  CREATE TABLE SYSPKSYSTEM
-->    LIKE SYSIBM.SYSPKSYSTEM
-->    IN DSNTESQ.DSNQPKG;
-->  CREATE INDEX DSNQ6X01
-->    ON SYSPKSYSTEM(LOCATION,COLLID,NAME,CONTOKEN,SYSTEM,ENABLE);
--**********************************************************************
--* INS1                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     1, 2, 3, 4, 5, 8, 40, 47, 58                                   *
--**********************************************************************
-->  INSERT INTO SYSTABLESPACE
-->    SELECT * FROM SYSIBM.SYSTABLESPACE;
--**********************************************************************
--* INS2                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     2, 3, 4, 6, 7                                                  *
--**********************************************************************
-->  INSERT INTO SYSTABLEPART
-->    SELECT * FROM SYSIBM.SYSTABLEPART;
--**********************************************************************
--* INS3                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 26, 30, 42, 50,   *
--*     51, 60                                                         *
--**********************************************************************
-->  INSERT INTO SYSTABLES
-->    SELECT * FROM SYSIBM.SYSTABLES;
--**********************************************************************
--* INS4                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     9, 17, 18, 19, 25, 29, 54                                      *
--**********************************************************************
-->  INSERT INTO SYSCOLUMNS
-->    SELECT * FROM SYSIBM.SYSCOLUMNS;
--**********************************************************************
--* INS5                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     18, 19                                                         *
--**********************************************************************
-->  INSERT INTO SYSFIELDS
-->    SELECT * FROM SYSIBM.SYSFIELDS;
--**********************************************************************
--* INS6                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     10, 11, 12                                                     *
--**********************************************************************
-->  INSERT INTO SYSRELS
-->    SELECT * FROM SYSIBM.SYSRELS;
--**********************************************************************
--* INS7                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     54                                                             *
--**********************************************************************
-->  INSERT INTO SYSFOREIGNKEYS
-->    SELECT * FROM SYSIBM.SYSFOREIGNKEYS;
--**********************************************************************
--* INS8                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     6, 20, 21, 22, 23, 25, 39, 57                                  *
--**********************************************************************
-->  INSERT INTO SYSINDEXES
-->    SELECT * FROM SYSIBM.SYSINDEXES;
--**********************************************************************
--* INS9                                                               *
--*  The following INSERT should be used for query numbers:            *
--*     22, 23, 24                                                     *
--**********************************************************************
-->  INSERT INTO SYSINDEXPART
-->    SELECT * FROM SYSIBM.SYSINDEXPART;
--**********************************************************************
--* INS10                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     21, 25                                                         *
--**********************************************************************
-->  INSERT INTO SYSKEYS
-->    SELECT * FROM SYSIBM.SYSKEYS;
--**********************************************************************
--* INS11                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     26, 27, 28, 55, 56, 64                                         *
--**********************************************************************
-->  INSERT INTO SYSTABAUTH
-->    SELECT * FROM SYSIBM.SYSTABAUTH;
--**********************************************************************
--* INS12                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     27, 28, 29                                                     *
--**********************************************************************
-->  INSERT INTO SYSCOLAUTH
-->    SELECT * FROM SYSIBM.SYSCOLAUTH;
--**********************************************************************
--* INS13                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     30, 41, 59                                                     *
--**********************************************************************
-->  INSERT INTO SYSSYNONYMS
-->    SELECT * FROM SYSIBM.SYSSYNONYMS;
--**********************************************************************
--* INS14                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     1, 43, 44                                                      *
--**********************************************************************
-->  INSERT INTO SYSDATABASE
-->    SELECT * FROM SYSIBM.SYSDATABASE;
--**********************************************************************
--* INS15                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     43, 44                                                         *
--**********************************************************************
-->  INSERT INTO SYSDBAUTH
-->    SELECT * FROM SYSIBM.SYSDBAUTH;
--**********************************************************************
--* INS16                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     46, 47                                                         *
--**********************************************************************
-->  INSERT INTO SYSRESAUTH
-->    SELECT * FROM SYSIBM.SYSRESAUTH;
--**********************************************************************
--* INS17                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     7, 24, 45, 46                                                  *
--**********************************************************************
-->  INSERT INTO SYSSTOGROUP
-->    SELECT * FROM SYSIBM.SYSSTOGROUP;
--**********************************************************************
--* INS18                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     45                                                             *
--**********************************************************************
-->  INSERT INTO SYSVOLUMES
-->    SELECT * FROM SYSIBM.SYSVOLUMES;
--**********************************************************************
--* INS19                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     31, 32, 33, 34, 37, 38, 55                                     *
--**********************************************************************
-->  INSERT INTO SYSPLAN
-->    SELECT * FROM SYSIBM.SYSPLAN;
--**********************************************************************
--* INS20                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     31, 32, 35, 36                                                 *
--**********************************************************************
-->  INSERT INTO SYSDBRM
-->    SELECT * FROM SYSIBM.SYSDBRM;
--**********************************************************************
--* INS21                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     33, 34, 35, 36                                                 *
--**********************************************************************
-->  INSERT INTO SYSSTMT
-->    SELECT * FROM SYSIBM.SYSSTMT;
--**********************************************************************
--* INS22                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     37                                                             *
--**********************************************************************
-->  INSERT INTO SYSPLANAUTH
-->    SELECT * FROM SYSIBM.SYSPLANAUTH;
--**********************************************************************
--* INS23                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     38, 39, 40, 41, 42                                             *
--**********************************************************************
-->  INSERT INTO SYSPLANDEP
-->    SELECT * FROM SYSIBM.SYSPLANDEP;
--**********************************************************************
--* INS24                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     15, 16, 48, 49, 52, 53                                         *
--**********************************************************************
-->  INSERT INTO SYSVTREE
-->    SELECT * FROM SYSIBM.SYSVTREE;
--**********************************************************************
--* INS25                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     13, 14, 48, 49, 64                                             *
--**********************************************************************
-->  INSERT INTO SYSVIEWS
-->    SELECT * FROM SYSIBM.SYSVIEWS;
--**********************************************************************
--* INS26                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     50, 51, 52, 53                                                 *
--**********************************************************************
-->  INSERT INTO SYSVIEWDEP
-->    SELECT * FROM SYSIBM.SYSVIEWDEP;
--**********************************************************************
--* INS27                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     56, 63                                                         *
--**********************************************************************
-->  INSERT INTO SYSPACKAGE
-->    SELECT * FROM SYSIBM.SYSPACKAGE;
--**********************************************************************
--* INS28                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     57, 58, 59, 60                                                 *
--**********************************************************************
-->  INSERT INTO SYSPACKDEP
-->    SELECT * FROM SYSIBM.SYSPACKDEP;
--**********************************************************************
--* INS29                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     61                                                             *
--**********************************************************************
-->  INSERT INTO SYSPACKLIST
-->    SELECT * FROM SYSIBM.SYSPACKLIST;
--**********************************************************************
--* INS30                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     62                                                             *
--**********************************************************************
-->  INSERT INTO SYSPLSYSTEM
-->    SELECT * FROM SYSIBM.SYSPLSYSTEM;
--**********************************************************************
--* INS31                                                              *
--*  The following INSERT should be used for query numbers:            *
--*     63                                                             *
--**********************************************************************
-->  INSERT INTO SYSPKSYSTEM
-->    SELECT * FROM SYSIBM.SYSPKSYSTEM;
--**********************************************************************
--*  QUERY1:                                                           *
--*    All table spaces must belong to a defined database.  This       *
--*    query will find all of the databases in SYSTABLESPACE that      *
--*    do not have corresponding rows in SYSDATABASE.                  *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSDBAUT table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
      SELECT DBNAME, NAME
        FROM SYSIBM.SYSTABLESPACE TS
        WHERE NOT EXISTS
          (SELECT *
             FROM SYSIBM.SYSDATABASE DB
             WHERE DB.NAME = TS.DBNAME);
--**********************************************************************
--*  QUERY2:                                                           *
--*    Every table space must have one row in SYSTABLESPACE as well    *
--*    as at least one row in SYSTABLEPART.                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT DBNAME, NAME
        FROM SYSIBM.SYSTABLESPACE TS
        WHERE NOT EXISTS
          (SELECT TP.DBNAME, TP.TSNAME
             FROM SYSIBM.SYSTABLEPART TP
             WHERE TP.DBNAME = TS.DBNAME
               AND TP.TSNAME = TS.NAME);
--**********************************************************************
--*  QUERY3:                                                           *
--*    Every table space must have one row in SYSTABLESPACE as well    *
--*    as at least one row in SYSTABLEPART.                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT DISTINCT DBNAME, TSNAME
        FROM SYSIBM.SYSTABLEPART TP
        WHERE NOT EXISTS
          (SELECT *
             FROM SYSIBM.SYSTABLESPACE TS
             WHERE TS.DBNAME = TP.DBNAME
               AND TS.NAME   = TP.TSNAME);
--**********************************************************************
--*  QUERY4:                                                           *
--*    Every partitioned table space will have one row in SYSTABLEPART *
--*    for every partition in the table space.                         *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT DBNAME, NAME
        FROM SYSIBM.SYSTABLESPACE TS
        WHERE PARTITIONS <> 0
          AND PARTITIONS <>
              (SELECT COUNT(*)
                 FROM SYSIBM.SYSTABLEPART TP
                 WHERE TP.DBNAME = TS.DBNAME
                   AND TP.TSNAME = TS.NAME);
--**********************************************************************
--*  QUERY5:                                                           *
--*    SYSTABLESPACE keeps track of the number of tables within each   *
--*    table space.  This should match the number of rows in           *
--*    SYSTABLES for that table space.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT DBNAME, NAME
        FROM SYSIBM.SYSTABLESPACE TS
        WHERE NTABLES <>
          (SELECT COUNT(*)
             FROM SYSIBM.SYSTABLES TB
             WHERE TYPE IN ('T', 'X','M')
               AND TB.DBNAME = TS.DBNAME
               AND TB.TSNAME = TS.NAME
               AND TB.DBID = TS.DBID
               AND TS.NAME <> 'SYSDEFLT');
--**********************************************************************
--*  QUERY6:                                                           *
--*    For every partitioned table space, there must exist a           *
--*    partitioning index.  This query will insure that the index in   *
--*    SYSTABLEPART has a corresponding row in SYSINDEXES.             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT DISTINCT DBNAME, TSNAME
        FROM SYSIBM.SYSTABLEPART TP
        WHERE PARTITION <> 0
          AND IXCREATOR <> '        '
          AND IXNAME <> '                  '
          AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSINDEXES IX
               WHERE TP.IXCREATOR = IX.CREATOR
                 AND TP.IXNAME = IX.NAME);
--**********************************************************************
--*  QUERY7:                                                           *
--*    For stogroup-defined table spaces, the DB2 stogroup that is     *
--*    used for the table space must be defined in SYSSTOGROUP.        *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSGROUP table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
      SELECT DBNAME, TSNAME, PARTITION
        FROM SYSIBM.SYSTABLEPART TP
        WHERE STORTYPE = 'I'
          AND STORNAME <> 'SYSDEFLT'
          AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSSTOGROUP SG
               WHERE TP.STORNAME = SG.NAME);
--**********************************************************************
--*  QUERY8:                                                           *
--*    Every table resides in a table space.  That table space must    *
--*    be defined in SYSTABLESPACE.                                    *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT CREATOR, NAME
        FROM SYSIBM.SYSTABLES TB
        WHERE NOT EXISTS
          (SELECT *
             FROM SYSIBM.SYSTABLESPACE TS
             WHERE TS.DBNAME = TB.DBNAME
               AND TS.NAME = TB.TSNAME);
--**********************************************************************
--*  QUERY9:                                                           *
--*    Each row in SYSTABLES contains information on the number of     *
--*    columns in the table.  That number should match the number of   *
--*    rows in SYSCOLUMNS for the table.                               *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
      SELECT CREATOR, NAME
        FROM SYSIBM.SYSTABLES TB
        WHERE COLCOUNT <>
          (SELECT COUNT(*)
             FROM SYSIBM.SYSCOLUMNS CL
             WHERE CL.TBCREATOR = TB.CREATOR
               AND CL.TBNAME = TB.NAME
               AND COLNO > 0);
--**********************************************************************
--*  QUERY10:                                                          *
--*    Each row in SYSRELS contains information about relationships.   *
--*    Each parent table (referenced table) that is defined in SYSRELS *
--*    should be represented by the CHILDREN column in SYSTABLES.      *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSTABLES TB
         WHERE TYPE = 'T'
           AND CHILDREN <> 0
           AND CHILDREN <>
             (SELECT COUNT(*)
                FROM SYSIBM.SYSRELS RL
                WHERE RL.REFTBCREATOR = TB.CREATOR
                  AND RL.REFTBNAME = TB.NAME);
--**********************************************************************
--*  QUERY11:                                                          *
--*    Each row in SYSRELS contains information about relationships.   *
--*    Each child table that is defined in SYSRELS should be           *
--*    represented by the PARENTS column in SYSTABLES.                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSTABLES TB
         WHERE TYPE = 'T'
           AND PARENTS <> 0
           AND PARENTS <>
             (SELECT COUNT(*)
                FROM SYSIBM.SYSRELS RL
                WHERE RL.CREATOR = TB.CREATOR
                  AND RL.TBNAME = TB.NAME);
--**********************************************************************
--*  QUERY12:                                                          *
--*    Each row in SYSRELS contains information about relationships.   *
--*    Each child table that is defined in SYSRELS should be have a    *
--*    corresponding row in SYSTABLES.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, TBNAME
         FROM SYSIBM.SYSRELS RL
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE RL.CREATOR = TB.CREATOR
                AND RL.TBNAME = TB.NAME
                AND TYPE = 'T');
--**********************************************************************
--*  QUERY13:                                                          *
--*    SYSTABLES records information about tables, views, and aliases. *
--*    For every row in SYSTABLES that describes a view, there should  *
--*    be a row in SYSVIEWS.                                           *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSTABLES TB
         WHERE TYPE = 'V'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSVIEWS VW
                WHERE VW.CREATOR = TB.CREATOR
                  AND VW.NAME = TB.NAME
                  AND SEQNO = 1);
--**********************************************************************
--*  QUERY14:                                                          *
--*    SYSTABLES records information about tables, views, and aliases. *
--*    For every view row in SYSVIEWS with type 'V' or 'M', there      *
--*    should be a row in SYSTABLES that describes a view or MQT.      *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSVIEWS VW
         WHERE SEQNO = 1
           AND (VW.TYPE = 'V' OR VW.TYPE = 'M')
           AND NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE ((VW.TYPE = 'V' AND TB.TYPE='V')
                 OR  (VW.TYPE = 'M' AND TB.TYPE='M'))
                AND TB.CREATOR = VW.CREATOR
                AND TB.NAME = VW.NAME);
--**********************************************************************
--*  QUERY15:                                                          *
--*    SYSTABLES records information about tables, views, and aliases. *
--*    For every row in SYSTABLES that describes a view, there should  *
--*    be a row in SYSVTREE.                                           *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSTABLES TB
         WHERE TYPE = 'V'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSVTREE VT
                WHERE VT.CREATOR = TB.CREATOR
                  AND VT.NAME = TB.NAME);
--**********************************************************************
--*  QUERY16:                                                          *
--*    SYSTABLES records information about tables, views, and aliases. *
--*    For every row in SYSVTREE with type blank, V or M, there should *
--*    be a row in SYSTABLES that describes a view or MQT.             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSVTREE VT
         WHERE (VT.TYPE='V' OR VT.TYPE='M')
               AND NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE ((TB.TYPE='V' AND VT.TYPE='V')
                OR   (TB.TYPE='M' AND VT.TYPE='M'))
                AND TB.CREATOR = VT.CREATOR
                AND TB.NAME = VT.NAME);
--**********************************************************************
--*  QUERY17:                                                          *
--*    Each row in SYSCOLUMNS represents a column in a table.  A table *
--*    that is represented in a row of SYSCOLUMNS should have a        *
--*    corresponding row in SYSTABLES.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT TBCREATOR, TBNAME, NAME
         FROM SYSIBM.SYSCOLUMNS CL
         WHERE NOT EXISTS
           (SELECT TB.CREATOR, TB.NAME
              FROM SYSIBM.SYSTABLES TB
              WHERE TB.CREATOR = CL.TBCREATOR
                AND TB.NAME = CL.TBNAME);
--**********************************************************************
--*  QUERY18:                                                          *
--*    Each row in SYSCOLUMNS is related to a column.  A column that   *
--*    is represented in a row of SYSCOLUMNS should have a             *
--*    corresponding row in SYSFIELDS.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CL.TBCREATOR, CL.TBNAME, CL.NAME
         FROM SYSIBM.SYSCOLUMNS CL
         LEFT OUTER JOIN
              SYSIBM.SYSFIELDS FL
                ON  FL.TBCREATOR = CL.TBCREATOR
                AND FL.TBNAME = CL.TBNAME
                AND FL.NAME = CL.NAME
                AND FL.COLNO = CL.COLNO
         WHERE CL.FLDPROC = 'Y'
           AND FL.TBCREATOR IS NULL;
--**********************************************************************
--*  QUERY19:                                                          *
--*    Each row in SYSFIELDS is related to a column.  If a row in      *
--*    SYSFIELDS  indicates that there is a field procedure for the    *
--*    column, then there should be a corresponding row in SYSCOLUMNS. *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT TBCREATOR, TBNAME, NAME
         FROM SYSIBM.SYSFIELDS FL
         WHERE FLDPROC <> '        '
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSCOLUMNS CL
                WHERE FL.TBCREATOR = CL.TBCREATOR
                  AND FL.TBNAME = CL.TBNAME
                  AND FL.NAME = CL.NAME
                  AND FL.COLNO = CL.COLNO);
--**********************************************************************
--*  QUERY20:                                                          *
--*    Every index has to be defined on a table.  Every row in         *
--*    SYSINDEXES should therefore have a corresponding row in         *
--*    SYSTABLES.                                                      *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSINDEXES IX
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE TB.CREATOR = IX.TBCREATOR
                AND TB.NAME = IX.TBNAME);
--**********************************************************************
--*  QUERY21:                                                          *
--*    Every index has a set of index keys.  The number of index keys  *
--*    represented in a row of SYSINDEXES should match the number of   *
--*    rows in SYSKEYS for that index.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSINDEXES IX
         WHERE COLCOUNT <>
           (SELECT COUNT(*)
              FROM SYSIBM.SYSKEYS KY
              WHERE KY.IXCREATOR = IX.CREATOR
                AND KY.IXNAME = IX.NAME);
--**********************************************************************
--*  QUERY22:                                                          *
--*    Every index must have at least one row in SYSINDEXPART as well  *
--*    as a row in SYSINDEXES.                                         *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSINDEXES IX
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSINDEXPART IP
              WHERE IP.IXCREATOR = IX.CREATOR
                AND IP.IXNAME = IX.NAME);
--**********************************************************************
--*  QUERY23:                                                          *
--*    Every index must have at least one row in SYSINDEXPART as well  *
--*    as a row in SYSINDEXES.                                         *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT IXCREATOR, IXNAME
         FROM SYSIBM.SYSINDEXPART IP
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSINDEXES IX
              WHERE IX.CREATOR = IP.IXCREATOR
                AND IX.NAME = IP.IXNAME);
--**********************************************************************
--*  QUERY24:                                                          *
--*    For stogroup-defined indexes, the DB2 stogroup that is used for *
--*    the index must be defined in SYSSTOGROUP.                       *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSGROUP table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT IXCREATOR, IXNAME, PARTITION
         FROM SYSIBM.SYSINDEXPART IP
         WHERE STORTYPE = 'I'
           AND STORNAME <> 'SYSDEFLT'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSSTOGROUP SG
                WHERE SG.NAME = IP.STORNAME);
--**********************************************************************
--*  QUERY25:                                                          *
--*    Each index key column must have a row in SYSCOLUMNS.            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT IXCREATOR, IXNAME, COLNAME, COLNO
         FROM SYSIBM.SYSKEYS KY,
              SYSIBM.SYSINDEXES IX
         WHERE IXCREATOR = CREATOR
           AND IXNAME = NAME
           AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSCOLUMNS CL
               WHERE CL.TBCREATOR = IX.TBCREATOR
                 AND CL.TBNAME = IX.TBNAME
                 AND CL.NAME = KY.COLNAME
                 AND CL.COLNO = KY.COLNO);
--**********************************************************************
--*  QUERY26:                                                          *
--*    SYSTABAUTH records privileges held by users on tables or views. *
--*    Each row in SYSTABAUTH must have a corresponding row in         *
--*    SYSTABLES.                                                      *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT GRANTOR, GRANTEE, TCREATOR, TTNAME
         FROM SYSIBM.SYSTABAUTH TA
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES
              WHERE CREATOR = TA.TCREATOR
                AND NAME = TA.TTNAME);
--**********************************************************************
--*  QUERY27:                                                          *
--*    If UPDATE privileges are held by users on specific columns,     *
--*    then the UPDATECOLS column of SYSTABAUTH will contain an        *
--*    asterisk.  If that is the case, then there should be at least   *
--*    one corresponding row in SYSCOLAUTH.                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT GRANTOR, GRANTEE, TCREATOR, TTNAME
         FROM SYSIBM.SYSTABAUTH TA
         WHERE UPDATECOLS = '*'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSCOLAUTH CA
                WHERE CA.CREATOR = TA.TCREATOR
                  AND CA.TNAME = TA.TTNAME
                  AND CA.TIMESTAMP = TA.TIMESTAMP);
--**********************************************************************
--*  QUERY28:                                                          *
--*    Every row in SYSCOLAUTH should refer to a table or view, which  *
--*    will have a row in SYSTABLES.                                   *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT GRANTOR, GRANTEE, CREATOR, TNAME, COLNAME
         FROM SYSIBM.SYSCOLAUTH CA
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE TB.CREATOR = CA.CREATOR
                AND TB.NAME = CA.TNAME);
--**********************************************************************
--*  QUERY29:                                                          *
--*    Every row in SYSCOLAUTH should refer to a specific column,      *
--*    which will have a row in SYSCOLUMNS.                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT GRANTOR, GRANTEE, CREATOR, TNAME, COLNAME
         FROM SYSIBM.SYSCOLAUTH CA
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSCOLUMNS CL
              WHERE CL.TBCREATOR = CA.CREATOR
                AND CL.TBNAME = CA.TNAME
                AND CL.NAME = CA.COLNAME);
--**********************************************************************
--*  QUERY30:                                                          *
--*    Synonyms are defined on tables or views.  For each synonym,     *
--*    there should be a row in SYSTABLES for the table or view upon   *
--*    which it is defined.                                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSSYNONYMS SY
         WHERE NOT EXISTS
           (SELECT *
              FROM SYSIBM.SYSTABLES TB
              WHERE TB.CREATOR = SY.TBCREATOR
                AND TB.NAME = SY.TBNAME);
--**********************************************************************
--*  QUERY31:                                                          *
--*    Every plan without a package list must have one or more DBRMs   *
--*    associated with it.  That means that each plan without a        *
--*    package list should have a corresponding row in SYSDBRM.        *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it might mean:        *
--*    (1) that an improper recovery was done,                         *
--*    (2) that a improper copy caused the data inconsistency,         *
--*    (3) plans have been bound with empty DBRM members.              *
--*    If you get rows returned for (3) they can be ignored.           *

--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSPLAN
         WHERE PLENTRIES = 0
           AND NAME NOT IN
           (SELECT PLNAME
              FROM SYSIBM.SYSDBRM);
--**********************************************************************
--*  QUERY32:                                                          *
--*    Every row in SYSDBRM relates to a specific plan.  Every row in  *
--*    SYSDBRM should therefore have a corresponding row in SYSPLAN.   *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT PLNAME, NAME
         FROM SYSIBM.SYSDBRM
         WHERE PLNAME NOT IN
           (SELECT NAME FROM SYSIBM.SYSPLAN) ;
--**********************************************************************
--*  QUERY33:                                                          *
--*    Every plan without a package list must have one or more         *
--*    statements associated with it.  That means that each plan       *
--*    without a package list should have a corresponding row in       *
--*    SYSSTMT.                                                        *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it might mean:        *
--*    (1) that an improper recovery was done,                         *
--*    (2) that a improper copy caused the data inconsistency,         *
--*    (3) plans have been bound with empty DBRM members.              *
--*    If you get rows returned for (3) they can be ignored.           *
--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSPLAN
         WHERE PLENTRIES = 0
           AND NAME NOT IN
           (SELECT PLNAME FROM SYSIBM.SYSSTMT) ;
--**********************************************************************
--*  QUERY34:                                                          *
--*    Every row in SYSSTMT relates to a specific plan.  Every row in  *
--*    SYSSTMT should therefore have a corresponding row in SYSPLAN.   *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT PLNAME, NAME
         FROM SYSIBM.SYSSTMT
         WHERE PLNAME NOT IN
           (SELECT NAME FROM SYSIBM.SYSPLAN)
              GROUP BY PLNAME, NAME;
--**********************************************************************
--*  QUERY35:                                                          *
--*    Every DBRM should have at least one statement associated with   *
--*    it.  Every row in SYSDBRM should therefore have at least one    *
--*    corresponding row in SYSSTMT and every row in SYSSTMT should    *
--*    have a corresponding row in SYSDBRM.                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
  SELECT DBRM.PLNAME, DBRM.NAME,
         STMT.PLNAME, STMT.NAME
      FROM SYSIBM.SYSDBRM DBRM FULL OUTER JOIN
           SYSIBM.SYSSTMT STMT
         ON
          DBRM.PLNAME = STMT.PLNAME
      AND DBRM.NAME = STMT.NAME
      WHERE (STMT.NAME IS NULL OR DBRM.NAME IS NULL)
        GROUP BY DBRM.PLNAME, DBRM.NAME,
                 STMT.PLNAME, STMT.NAME ;
--**********************************************************************
--*  QUERY37:                                                          *
--*    SYSPLANAUTH records the privileges held by user on specific     *
--*    plans.  For every plan in SYSPLANAUTH, there should be a row    *
--*    in SYSPLAN.                                                     *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT GRANTOR, GRANTEE, NAME
         FROM SYSIBM.SYSPLANAUTH
         WHERE NAME NOT IN
           (SELECT NAME FROM SYSIBM.SYSPLAN)
       GROUP BY GRANTOR, GRANTEE, NAME ;
--**********************************************************************
--*  QUERY38:                                                          *
--*    SYSPLANDEP records the dependencies that a given plan has on    *
--*    other DB2 objects.  For every plan in SYSPLANDEP, there should  *
--*    be a row in SYSPLAN.                                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DNAME
         FROM SYSIBM.SYSPLANDEP
         WHERE DNAME NOT IN
           (SELECT NAME FROM SYSIBM.SYSPLAN)
       GROUP BY DNAME ;
--**********************************************************************
--*  QUERY39:                                                          *
--*    SYSPLANDEP records the dependencies that a given plan has on    *
--*    other DB2 objects.  For every row in SYSPLANDEP that indicates  *
--*    a dependency upon an index, there should be a corresponding     *
--*    row in SYSINDEXES.                                              *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPLAN table spaces are out        *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BCREATOR, DNAME
         FROM SYSIBM.SYSPLANDEP PD
         WHERE BTYPE = 'I'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSINDEXES
                WHERE CREATOR = PD.BCREATOR
                  AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY40:                                                          *
--*    SYSPLANDEP records the dependencies that a given plan has on    *
--*    other DB2 objects.  For every row in SYSPLANDEP that indicates  *
--*    a dependency upon a table space, there should be a              *
--*    corresponding row in SYSTABLESPACE.                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPLAN table spaces are out        *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BCREATOR, DNAME
         FROM SYSIBM.SYSPLANDEP PD
         WHERE BTYPE = 'R'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSTABLESPACE
                WHERE DBNAME = PD.BCREATOR
                  AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY41:                                                          *
--*    SYSPLANDEP records the dependencies that a given plan has on    *
--*    other DB2 objects.  For every row in SYSPLANDEP that indicates  *
--*    a dependency upon a synonym, there should be a corresponding    *
--*    row in SYSSYNONYMS.                                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPLAN table spaces are out        *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BCREATOR, DNAME
         FROM SYSIBM.SYSPLANDEP PD
         WHERE BTYPE = 'S'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSSYNONYMS
                WHERE CREATOR = PD.BCREATOR
                  AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY42:                                                          *
--*    SYSPLANDEP records the dependencies that a given plan has on    *
--*    other DB2 objects.  For every row in SYSPLANDEP that indicates  *
--*    a dependency upon a table, view, or alias, there should be a    *
--*    corresponding row in SYSTABLES.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPLAN table spaces are out        *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BCREATOR, BTYPE, DNAME
         FROM SYSIBM.SYSPLANDEP PD
         WHERE BTYPE IN ('T', 'V', 'A')
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSTABLES
                WHERE CREATOR = PD.BCREATOR
                  AND NAME = PD.BNAME
                  AND TYPE = PD.BTYPE);
--**********************************************************************
--*  QUERY43:                                                          *
--*    SYSDBAUTH records privileges that users hold over specific      *
--*    databases.  For every database in SYSDBAUTH, there should be    *
--*    a row in SYSDATABASE.                                           *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT NAME
         FROM SYSIBM.SYSDBAUTH DA
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSDATABASE DB
               WHERE DB.NAME = DA.NAME);
--**********************************************************************
--*  QUERY44:                                                          *
--*    SYSDBAUTH records privileges that users hold over specific      *
--*    databases, and should contain at least one row for every        *
--*    database.                                                       *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSDATABASE DB
         WHERE NAME NOT LIKE 'DSNDB%'
           AND NOT EXISTS
              (SELECT *
                 FROM SYSIBM.SYSDBAUTH DA
                 WHERE DA.NAME = DB.NAME);
--**********************************************************************
--*  QUERY45:                                                          *
--*    Every DB2 stogroup is comprised of one or more volumes.  Every  *
--*    row in SYSVOLUMES should therefore have a corresponding row in  *
--*    SYSSTOGROUP.                                                    *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DISTINCT SGNAME
         FROM SYSIBM.SYSVOLUMES VL
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSSTOGROUP
               WHERE NAME = VL.SGNAME);
--**********************************************************************
--*  QUERY46:                                                          *
--*    SYSRESAUTH records privileges that users hold over specific     *
--*    table spaces, DB2 stogroups, bufferpools, and collections.      *
--*    Every DB2 stogroup that has a row in SYSRESAUTH should have a   *
--*    corresponding row in SYSSTOGROUP.                               *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSGPAUT and SYSGROUP table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT DISTINCT NAME
         FROM SYSIBM.SYSRESAUTH RA
         WHERE OBTYPE = 'S'
           AND QUALIFIER = '        '
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSSTOGROUP SG
                WHERE SG.NAME = RA.NAME);
--**********************************************************************
--*  QUERY47:                                                          *
--*    SYSRESAUTH records privileges that users hold over specific     *
--*    table spaces, DB2 stogroups, bufferpools, and collections.      *
--*    Every table space that has a row in SYSRESAUTH should have a    *
--*    corresponding row in SYSTABLESPACE.                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSGPAUT table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT DISTINCT QUALIFIER, NAME
         FROM SYSIBM.SYSRESAUTH RA
         WHERE OBTYPE = 'R'
           AND NAME <> 'SYSDEFLT'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSTABLESPACE TS
                WHERE DBNAME = RA.QUALIFIER
                  AND TS.NAME = RA.NAME);
--**********************************************************************
--*  QUERY48:                                                          *
--*    Every row in SYSVTREE should have a corresponding row in        *
--*    SYSVIEWS.                                                       *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSVTREE VT
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSVIEWS VW
               WHERE VW.CREATOR = VT.CREATOR
                 AND VW.NAME = VT.NAME
                 AND SEQNO = 1);
--**********************************************************************
--*  QUERY49:                                                          *
--*    Every row in SYSVIEWS should have a corresponding row in        *
--*    SYSVTREE.                                                       *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, NAME
         FROM SYSIBM.SYSVIEWS VW
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSVTREE VT
               WHERE VT.CREATOR = VW.CREATOR
                 AND VT.NAME = VW.NAME);
--**********************************************************************
--*  QUERY50:                                                          *
--*    SYSVIEWDEP contains information about the tables and views that *
--*    a given view is dependent upon.  Each row in SYSVIEWDEP should  *
--*    have a corresponding row in SYSTABLES for the view with the     *
--*    dependency.                                                     *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT DCREATOR, DNAME
         FROM SYSIBM.SYSVIEWDEP VD
         WHERE (VD.DTYPE='V' OR VD.DTYPE='M')
               AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSTABLES TB
               WHERE ((TB.TYPE='V' AND VD.DTYPE='V')
                 OR   (TB.TYPE='M' AND VD.DTYPE='M'))
                 AND TB.CREATOR = VD.DCREATOR
                 AND TB.NAME = VD.DNAME);
--**********************************************************************
--*  QUERY51:                                                          *
--*    SYSVIEWDEP contains information about the tables and views that *
--*    a given view is dependent upon.  Each table and view row in     *
--*    SYSVIEWDEP should have a corresponding row in SYSTABLES for the *
--*    tables and views that the view is dependent upon.               *
--*    SYSVIEWDEP rows that show dependencies on functions are         *
--*    excluded in this query since there are no associated SYSTABLES  *
--*    rows for functions.                                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSVIEWS table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BCREATOR, BNAME, BTYPE
         FROM SYSIBM.SYSVIEWDEP VD
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSTABLES
               WHERE TYPE = VD.BTYPE
                 AND CREATOR = VD.BCREATOR
                 AND NAME = VD.BNAME)
         AND BTYPE <> 'F';
--**********************************************************************
--*  QUERY52:                                                          *
--*    SYSVIEWDEP contains information about the tables and views that *
--*    a given view is dependent upon.  Each row in SYSVIEWDEP should  *
--*    have a corresponding row in SYSVTREE for the view with the      *
--*    dependency.                                                     *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT DCREATOR, DNAME
         FROM SYSIBM.SYSVIEWDEP VD
         WHERE NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSVTREE VT
               WHERE VT.CREATOR = VD.DCREATOR
                 AND VT.NAME    = VD.DNAME
                 AND VT.TYPE    = VD.DTYPE);
--**********************************************************************
--*  QUERY53:                                                          *
--*    SYSVIEWDEP contains information about the tables and views that *
--*    a given view is dependent upon.  Each row in SYSVIEWDEP should  *
--*    have a corresponding row in SYSVTREE for any views that the     *
--*    view is dependent upon.                                         *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT BCREATOR, BNAME
         FROM SYSIBM.SYSVIEWDEP VD
         WHERE BTYPE IN ('V','M','F')
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSVTREE
                WHERE CREATOR = VD.BCREATOR
                  AND NAME = VD.BNAME
                  AND TYPE = VD.BTYPE);
--**********************************************************************
--*  QUERY54:                                                          *
--*    SYSFOREIGNKEYS contains information for each foreign key column *
--*    in a referential constraint.  Each row in SYSFOREIGNKEYS should *
--*    have a corresponding row in SYSCOLUMNS.                         *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT CREATOR, TBNAME, COLNAME, COLNO, RELNAME
         FROM SYSIBM.SYSFOREIGNKEYS FK
         WHERE NOT EXISTS
            (SELECT CL.TBCREATOR, CL.TBNAME, CL.NAME, CL.COLNO
               FROM SYSIBM.SYSCOLUMNS CL
               WHERE FK.CREATOR = CL.TBCREATOR
                 AND FK.TBNAME = CL.TBNAME
                 AND FK.COLNAME = CL.NAME
                 AND FK.COLNO = CL.COLNO);
--**********************************************************************
--*  QUERY55:                                                          *
--*    SYSTABAUTH has rows that indicate authorization dependencies    *
--*    that plans have on tables.  Each row in SYSTABAUTH recording    *
--*    a dependency on a plan should have a corresponding row in       *
--*    SYSPLAN describing that plan.                                   *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPLAN table spaces are out        *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not). DB2 might have been          *
--*    been stopped while operations on the DB2 catalog, for example,  *
--*    BIND, DDL, GRANT, REVOKE, were in process.)  You might want to  *
--*    use BIND PLAN MEMBER(dbrm-member-name) ACTION(ADD)              *
--*    and FREE PLAN on the orphan plan names as an alternative to     *
--*    REPAIR.  FREE PLAN deletes corresponding tables entries from    *
--*    the catalog and directory and is usually insensitive to catalog *
--*    inconsistencies.                                                *
--**********************************************************************
       SELECT GRANTEE
         FROM SYSIBM.SYSTABAUTH TA
         WHERE GRANTEETYPE = 'P'
           AND COLLID = '                  '
           AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSPLAN PL
               WHERE PL.NAME = TA.GRANTEE);
--**********************************************************************
--*  QUERY56:                                                          *
--*    SYSTABAUTH has rows that indicate authorization dependencies    *
--*    that packages have on tables.  Each row in SYSTABAUTH recording *
--*    a dependency on a package should have a corresponding row in    *
--*    SYSPACKAGE describing that package.                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPKAGE table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT COLLID, GRANTEE
         FROM SYSIBM.SYSTABAUTH TA
         WHERE GRANTEETYPE = 'P'
           AND COLLID <> '                  '
           AND NOT EXISTS
            (SELECT *
               FROM SYSIBM.SYSPACKAGE PK
               WHERE PK.LOCATION = '                '
                 AND PK.COLLID = TA.COLLID
                 AND PK.NAME = TA.GRANTEE
                 AND PK.CONTOKEN = TA.CONTOKEN);
--**********************************************************************
--*  QUERY57:                                                          *
--*    SYSPACKDEP records the dependencies that a given package has on *
--*    other DB2 objects.  For every row in SYSPACKDEP that indicates  *
--*    a dependency upon an index, there should be a corresponding     *
--*    row in SYSINDEXES.                                              *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPKAGE table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BQUALIFIER, DNAME
         FROM SYSIBM.SYSPACKDEP PD
         WHERE BTYPE = 'I'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSINDEXES
                WHERE CREATOR = PD.BQUALIFIER
                  AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY58:                                                          *
--*    SYSPACKDEP records the dependencies that a given package has on *
--*    other DB2 objects.  For every row in SYSPACKDEP that indicates  *
--*    a dependency upon a table space, there should be a              *
--*    corresponding row in SYSTABLESPACE.                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPKAGE table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BQUALIFIER, DNAME
         FROM SYSIBM.SYSPACKDEP PD
         WHERE BTYPE = 'R'
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSTABLESPACE
                WHERE DBNAME = PD.BQUALIFIER
                  AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY59:                                                          *
--*    SYSPACKDEP records the dependencies that a given package has on *
--*    other DB2 objects.  For every row in SYSPACKDEP that indicates  *
--*    a dependency upon a synonym, there should be a corresponding    *
--*    row in SYSSYNONYMS.                                             *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPKAGE table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BQUALIFIER, DNAME
         FROM SYSIBM.SYSPACKDEP PD
         WHERE BTYPE = 'S'
           AND NOT EXISTS
              (SELECT *
                 FROM SYSIBM.SYSSYNONYMS
                 WHERE CREATOR = PD.BQUALIFIER
                   AND NAME = PD.BNAME);
--**********************************************************************
--*  QUERY60:                                                          *
--*    SYSPACKDEP records the dependencies that a given package has on *
--*    other DB2 objects.  For every row in SYSPACKDEP that indicates  *
--*    a dependency upon a table, view, or alias, there should be a    *
--*    corresponding row in SYSTABLES.                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that your SYSDBASE and SYSPKAGE table spaces are out       *
--*    of synch (perhaps one has been recovered to a prior point       *
--*    in time, while the other has not).                              *
--**********************************************************************
       SELECT BNAME, BQUALIFIER, BTYPE, DNAME
         FROM SYSIBM.SYSPACKDEP PD
         WHERE BTYPE IN ('T', 'V', 'A')
           AND NOT EXISTS
             (SELECT *
                FROM SYSIBM.SYSTABLES
                WHERE CREATOR = PD.BQUALIFIER
                  AND NAME = PD.BNAME
                  AND TYPE = PD.BTYPE);
--**********************************************************************
--*  QUERY61:                                                          *
--*    SYSPLAN.PLENTRIES is the number of package list entries for the *
--*    plan.                                                           *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSPLAN PL
         WHERE PLENTRIES > 0
           AND PLENTRIES <>
               (SELECT COUNT(*)
                  FROM SYSIBM.SYSPACKLIST PK
                  WHERE PK.PLANNAME = PL.NAME)
         UNION
         SELECT NAME
           FROM SYSIBM.SYSPLAN PL
           WHERE PLENTRIES < 0
             AND PLENTRIES <>
                 (SELECT - COUNT(*)
                      FROM SYSIBM.SYSPACKLIST PK
                      WHERE PK.PLANNAME = PL.NAME);
--**********************************************************************
--*  QUERY62:                                                          *
--*    SYSPLAN.SYSENTRIES is the number of rows associated with the    *
--*    plan in SYSPLSYSTEM.                                            *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSPLAN PL
         WHERE SYSENTRIES > 0
           AND SYSENTRIES <>
               (SELECT COUNT(*)
                  FROM SYSIBM.SYSPLSYSTEM PK
                  WHERE PK.NAME = PL.NAME)
         UNION
         SELECT NAME
           FROM SYSIBM.SYSPLAN PL
           WHERE SYSENTRIES < 0
             AND SYSENTRIES <>
                 (SELECT - COUNT(*)
                      FROM SYSIBM.SYSPLSYSTEM PK
                      WHERE PK.NAME = PL.NAME);
--**********************************************************************
--*  QUERY63:                                                          *
--*    SYSPACKAGE.SYSENTRIES the number of enabled or disabled entries *
--*    for this package in SYSPKSYSTEM                                 *
--*    Expected results: no rows returned.                             *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that an improper recovery or copy was done that caused     *
--*    the data inconsistency.                                         *
--**********************************************************************
       SELECT NAME
         FROM SYSIBM.SYSPACKAGE PK
         WHERE SYSENTRIES <> 0
           AND SYSENTRIES <>
               (SELECT COUNT(*)
                    FROM SYSIBM.SYSPKSYSTEM PS
                    WHERE PK.NAME = PS.NAME
                      AND PK.LOCATION = PS.LOCATION
                      AND PK.COLLID = PS.COLLID
                      AND PK.CONTOKEN = PS.CONTOKEN) ;
--**********************************************************************
--*  QUERY64:                                                          *
--*    Identify views (created using prior releases) that could        *
--*    potentially yield different results if the views were recreated *
--*    using Version 8.                                                *
--*    Expected results: no rows returned if no views are impacted.    *
--*    If you get rows returned from this query, it may possibly       *
--*    mean that if for some reason the identified views are recreated *
--*    using Version 5 (or a later release) that                       *
--*    'WITH LOCAL CHECK OPTION' should be explicitly specified to get *
--*    the same semantic as when the view was originally created.      *
--**********************************************************************
          SELECT  B.CREATOR, B.NAME, D.CREATOR, D.NAME
             FROM  SYSIBM.SYSVIEWS B,
                   SYSIBM.SYSVIEWS D,
                   SYSIBM.SYSTABAUTH A
             WHERE B.CREATOR = A.SCREATOR
               AND B.NAME    = A.STNAME
               AND A.GRANTEETYPE = ' '
               AND B.CHECK   = 'Y'
               AND D.CHECK   = 'N'
               AND D.CREATOR = A.TCREATOR
               AND D.NAME    = A.TTNAME
               AND D.CREATOR = A.GRANTOR
               AND A.GRANTEE = A.GRANTOR
               AND A.UPDATEAUTH <> ' ';
--**********************************************************************
--*  QUERY65:                                                          *
--*  The following query should return no rows found. If rows are      *
--*  returned, the identified databases need to have at least one      *
--*  tablespace with a page size of 8k or larger created.              *
--**********************************************************************
          SELECT DBA.NAME
            FROM SYSIBM.SYSDATABASE AS DBA
           WHERE DBA.TYPE = 'T'
             AND NOT EXISTS
                 ( SELECT *
                     FROM SYSIBM.SYSTABLESPACE AS TSP
                    WHERE TSP.DBNAME = DBA.NAME
                      AND (TSP.BPOOL LIKE 'BP8K%'
                        OR TSP.BPOOL LIKE 'BP16K%'
                        OR TSP.BPOOL LIKE 'BP32K%'
                          )
                 );
--**********************************************************************
--* Migration Step 1. The section entitled "Identify unsupported ob-   *
--* jects" under Migration Step 1 in chapter 2-7 of the DB2 Installa-  *
--* tion Guide explains how to locate objects that cannot be migrated  *
--* from DB2 Version 7 Release 1.  Specifically, the following types   *
--* of objects cannot be migrated to DB2 Version 8 Release 1:          *
--* (1) Non-Type 2 Indexes                                             *
--* Use the following queries to identify these non-migratable objects.*
--* If the queries return any rows, your DB2 Version 7 Release 1 cata- *
--* log cannot be migrated successfully to DB2 Version 8 Release 1 un- *
--* til you convert or delete the identified objects.  Use premigration*
--* job DSNTIJPM for assistance with converting the Type 1 indexes to  *
--* Type 2.                                                            *
--**********************************************************************
--M SELECT *
--M   FROM SYSIBM.SYSINDEXES
--M  WHERE INDEXTYPE <> '2';
--M
--**********************************************************************
--* Migration Step 2. In the DB2 Installation Guide it is recommended  *
--* in Migration Step 2 that the following query be run on the         *
--* DB2 Version 7 Release 1 catalog to ensure that you do not have a   *
--* STOGROUP defined with specific and non-specific volume IDs. If the *
--* query returns any rows the STOGROUPs identified have both specific *
--* and non-specific volumne IDS. TABLESPACEs in DATABASEs that use    *
--* these STOGROUPS can not be IMAGE COPIED or RECOVERED until         *
--* the STOGROUP only has specific or non-specific volumne IDS.        *
--**********************************************************************
--M SELECT * FROM SYSIBM.SYSVOLUMES V1
--M          WHERE VOLID <> '*' AND
--M                EXISTS (SELECT * FROM SYSIBM.SYSVOLUMES V2
--M                                 WHERE V1.SGNAME = V2.SGNAME AND
--M                                       V2.VOLID ='*');
--M
--**********************************************************************
--* Migration Step 3. In the DB2 Installation Guide it is recommended  *
--* in Migration Step 3 that the following queries be run on the       *
--* DB2 Version 7 Release 1 catalog to determine which                 *
--* plans and packages will be marked invalid after the migration.     *
--**********************************************************************
--M SELECT DISTINCT DNAME
--M   FROM SYSIBM.SYSPLANDEP
--M   WHERE BNAME IN
--M ('SYSCOLAUTH'   ,'SYSCOLDISTSTATS','SYSCOLDIST_HIST','SYSCOLSTATS' ,
--M  'SYSCOLUMNS'   ,'SYSCOLUMNS_HIST','SYSCOPY'        ,'SYSDBAUTH'   ,
--M  'SYSDBRM'      ,'SYSFIELDS'      ,'SYSINDEXES'     ,'SYSINDEXPART',
--M  'SYSINDEXSTATS','SYSPACKAGE'     ,'SYSPACKAUTH'    ,'SYSPACKDEP'  ,
--M  'SYSPACKSTMT'  ,'SYSPKSYSTEM'    ,'SYSPLANAUTH'    ,'SYSRESAUTH'  ,
--M  'SYSROUTINES'  ,'SYSROUTINEAUTH' ,'SYSSTMT'        ,'SYSSTRINGS'  ,
--M  'SYSTABAUTH'   ,'SYSTABLEPART'   ,'SYSTABLESPACE'  ,'SYSTABLES'   ,
--M  'SYSTRIGGERS'  ,'SYSUSERAUTH'    ,'SYSVIEWS'       ,'SYSVLTREE'   ,
--M  'SYSVTREE')
--M     AND BCREATOR = 'SYSIBM'
--M     AND BTYPE IN ('I','T')
--M   ORDER BY DNAME;
--M
--M SELECT DISTINCT COLLID, NAME, VERSION
--M   FROM SYSIBM.SYSPACKDEP, SYSIBM.SYSPACKAGE
--M   WHERE BNAME IN
--M ('SYSCOLAUTH'   ,'SYSCOLDISTSTATS','SYSCOLDIST_HIST','SYSCOLSTATS' ,
--M  'SYSCOLUMNS'   ,'SYSCOLUMNS_HIST','SYSCOPY'        ,'SYSDBAUTH'   ,
--M  'SYSDBRM'      ,'SYSFIELDS'      ,'SYSINDEXES'     ,'SYSINDEXPART',
--M  'SYSINDEXSTATS','SYSPACKAGE'     ,'SYSPACKAUTH'    ,'SYSPACKDEP'  ,
--M  'SYSPACKSTMT'  ,'SYSPKSYSTEM'    ,'SYSPLANAUTH'    ,'SYSRESAUTH'  ,
--M  'SYSROUTINES'  ,'SYSROUTINEAUTH' ,'SYSSTMT'        ,'SYSSTRINGS'  ,
--M  'SYSTABAUTH'   ,'SYSTABLEPART'   ,'SYSTABLESPACE'  ,'SYSTABLES'   ,
--M  'SYSTRIGGERS'  ,'SYSUSERAUTH'    ,'SYSVIEWS'       ,'SYSVLTREE'   ,
--M  'SYSVTREE')
--M     AND LOCATION = ' '
--M     AND BQUALIFIER = 'SYSIBM'
--M     AND BTYPE IN ('I','T')
--M     AND COLLID = DCOLLID
--M     AND NAME = DNAME
--M     AND CONTOKEN = DCONTOKEN
--M   ORDER BY COLLID, NAME, VERSION;
--**********************************************************************
--* Enabling-new-function considerations: The conversion process       *
--* renders some plans and packages invalid. The following queries     *
--* can be run to determine which plans and packages will be marked    *
--* invalid after the conversion.                                      *
--**********************************************************************
--M SELECT DISTINCT DNAME
--M   FROM SYSIBM.SYSPLANDEP
--M  WHERE BCREATOR = 'SYSIBM'
--M    AND ((BTYPE = 'I' AND BNAME = 'DSNKCX01')
--M      OR (BTYPE = 'T' AND BNAME IN
--M         (SELECT T.NAME
--M            FROM SYSIBM.SYSTABLES AS T
--M           WHERE T.DBID =6
--M             AND T.OBID<>0
--M             AND T.NAME NOT IN ('SYSCOPY','SYSOBDS'))))
--M  ORDER BY DNAME;
--M
--M SELECT DISTINCT COLLID, NAME, VERSION
--M   FROM SYSIBM.SYSPACKDEP, SYSIBM.SYSPACKAGE
--M  WHERE ((BTYPE = 'I' AND BNAME = 'DSNKCX01')
--M      OR (BTYPE = 'T' AND BNAME IN
--M         (SELECT T.NAME
--M            FROM SYSIBM.SYSTABLES AS T
--M           WHERE T.DBID =6
--M             AND T.OBID<>0
--M             AND T.NAME NOT IN ('SYSCOPY','SYSOBDS'))))
--M       AND LOCATION   = ' '
--M       AND BQUALIFIER = 'SYSIBM'
--M       AND COLLID     = DCOLLID
--M       AND NAME       = DNAME
--M       AND CONTOKEN   = DCONTOKEN
--M   ORDER BY COLLID, NAME, VERSION;
//*
